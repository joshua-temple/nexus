# golangci-lint configuration
# https://golangci-lint.run/usage/configuration/

run:
  # Timeout for analysis
  timeout: 5m
  # Exit code when at least one issue was found
  issues-exit-code: 1
  # Include test files
  tests: true
  # List of build tags
  build-tags:
    - integration

output:
  # Colored output
  color: true
  # Print lines of code with issue
  print-issued-lines: true
  # Print linter name in the end of issue text
  print-linter-name: true

linters:
  enable:
    - bodyclose
    - dogsled
    - dupl
    - errcheck
    - exportloopref
    - exhaustive
    - goconst
    - gocritic
    - gocyclo
    - gofmt
    - goimports
    - gomnd
    - goprintffuncname
    - gosec
    - gosimple
    - govet
    - ineffassign
    - lll
    - misspell
    - nakedret
    - noctx
    - nolintlint
    - revive
    - staticcheck
    - stylecheck
    - typecheck
    - unconvert
    - unparam
    - unused
    - whitespace

  disable:
    - depguard # Too strict
    - gochecknoglobals # We use some globals
    - gochecknoinits # Init functions are fine
    - godot # Too pedantic
    - godox # We want to allow TODOs
    - goerr113 # Too strict
    - golint # Deprecated
    - interfacer # Deprecated
    - maligned # Deprecated
    - scopelint # Deprecated
    - wsl # Too strict about whitespace

linters-settings:
  errcheck:
    # Report about not checking of errors in type assertions
    check-type-assertions: true
    # Report about assignment of errors to blank identifier
    check-blank: true

  govet:
    # Report about shadowed variables
    check-shadowing: true

  gocyclo:
    # Minimal code complexity to report
    min-complexity: 15

  dupl:
    # Tokens count to trigger issue
    threshold: 100

  goconst:
    # Minimal length of string constant
    min-len: 3
    # Minimal occurrences count to trigger
    min-occurrences: 3

  lll:
    # Max line length
    line-length: 120

  gomnd:
    settings:
      mnd:
        # Don't include the "operation" and "assign" checks
        checks: [argument, case, condition, return]

  misspell:
    # Locale to use
    locale: US

  nolintlint:
    # Require machine-readable nolint directives
    allow-legacy: false
    # Require an explanation for nolint directives
    require-explanation: true
    # Require nolint directives to be specific
    require-specific: true

  revive:
    # Accept revive's default rules
    confidence: 0.8

issues:
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
        - gomnd

    # Exclude some linters from running on example files
    - path: examples/
      linters:
        - errcheck
        - gosec
        - dupl

    # Exclude lll issues for long lines with go:generate
    - linters:
        - lll
      source: "^//go:generate "

  # Maximum issues count per one linter
  max-issues-per-linter: 0

  # Maximum count of issues with the same text
  max-same-issues: 0

  # Show only new issues
  new: false

  # Fix found issues (if it's supported by the linter)
  fix: false

severity:
  # Default value is empty string.
  # Set the default severity for issues.
  # If severity rules are defined and the issues do not match or no severity is provided to the rule
  # this will be the default severity applied.
  # Severities should match the supported severity names of the selected out format.
  # - Code climate: https://docs.codeclimate.com/docs/issues#issue-severity
  # - Checkstyle: https://checkstyle.sourceforge.io/property_types.html#severity
  # - GitHub: https://help.github.com/en/actions/reference/workflow-commands-for-github-actions#setting-an-error-message
  default-severity: error

  # If set to true severity-rules regular expressions become case sensitive
  case-sensitive: false

  # Default value is empty list.
  # When a list of severity rules are provided, severity information will be added to lint
  # issues. Severity rules have the same filtering capability as exclude rules except you
  # are allowed to specify one matcher per severity rule.
  # Only affects out formats that support setting severity information
  rules:
    - linters:
        - dupl
      severity: info
